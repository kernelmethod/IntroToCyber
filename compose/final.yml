version: '3'

x-ticktock-common: &ticktock-common
  environment: &common-env
    MINIO_BUCKET_AVATARS: 'avatar'
    MINIO_BUCKET_GALLERY: 'gallery'
    DB_HOST: '172.25.1.5'
    POSTGRES_USER: 'admin'
    POSTGRES_PASSWORD: 'sxbuOJi89JzW4XhA2hC5/6mIUaEwkqxF1wB3YN1T0iY'
    POSTGRES_DB: 'ticktock'
    ADMIN_USER: 'admin'
    ADMIN_PASS: 'LGHFpKJsNE3E8227cya0+cDVDZrwHK7t'
    MINIO_ROOT_USER: 'admin'
    MINIO_ROOT_PASSWORD: 'LGHFpKJsNE3E8227cya0+cDVDZrwHK7t'
    MINIO_HOST: '172.25.1.4'
    AWS_ACCESS_KEY_ID: 'admin'
    AWS_SECRET_ACCESS_KEY: 'LGHFpKJsNE3E8227cya0+cDVDZrwHK7t'

    # Dummy values for environment variables that were required in the
    # original labs.
    DIRECTORY_ENUMERATION_FLAG: 'flag{}'
    USER_ENUMERATION_FLAG: 'flag{}'
    POST_ENUMERATION_FLAG: 'flag{}'

services:
  webserver:
    image: '${DOCKER_REPO}/ticktock-web:latest'
    hostname: 'www.ticktock.lab'
    restart: always
    networks:
      ticktocknet:
        ipv4_address: 172.25.1.3
    environment:
      <<: *common-env
      SECRET_KEY: 'q4fyHyVh337kllhr1jIBP4yOKVOLyEGr'
      GUNICORN_RELOAD: '${GUNICORN_RELOAD:-1}'
    security_opt:
      - apparmor=ticktock-init

  proxy:
    image: '${DOCKER_REPO}/final-proxy:latest'
    hostname: 'proxy.ticktock.lab'
    build: ./final/proxy
    restart: always
    networks:
      ticktocknet:
        ipv4_address: 172.25.1.2
    depends_on:
      - minio
      - webserver
    ports:
      - '80:80'
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  # MinIO - S3 object store
  minio:
    image: minio/minio
    hostname: 's3.ticktock.lab'
    networks:
      ticktocknet:
        ipv4_address: 172.25.1.4
    environment:
      <<: *common-env
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - s3store:/data
    command: server /data --console-address ':9001'

  # Minio client (used to perform initial configuration of MinIO)
  createbuckets:
    image: '${DOCKER_REPO}/ticktock-createbuckets:latest'
    networks:
      ticktocknet:
        ipv4_address: 172.25.1.6
    environment:
      <<: *common-env
    depends_on:
      - minio
    restart: on-failure

  # Due to VCR's love for screwing around with DNS and HTTP proxying
  # it's extremely complicated to deploy this to the other node, but
  # that would be more ideal than this (at least for the firewall
  # problem).
  database:
    image: postgres:14
    hostname: 'db.ticktock.lab'
    networks:
      ticktocknet:
        ipv4_address: 172.25.1.5
    environment:
      <<: *common-env
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - dbstore:/var/lib/postgresql/data

networks:
  ticktocknet:
    driver: bridge
    ipam:
     config:
       - subnet: 172.25.1.0/24
         gateway: 172.25.1.1

volumes:
  caddy_data:
  caddy_config:
  s3store:
  dbstore:
